{"version":3,"sources":["Components/NavigationBar.js","Components/Login.js","Components/FormValidation/validate.js","Components/Register.js","actions/index.js","Components/FormValidation/asyncValidate.js","Components/FormValidation/showResults.js","Components/Copyright.js","App.js","serviceWorker.js","reducers/showSuccessMessage.js","reducers/index.js","index.js"],"names":["makeStyles","theme","root","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","easeOut","enteringScreen","marginRight","title","flexGrow","marginLeft","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","spacing","mixins","toolbar","justifyContent","content","contentShift","paper","marginTop","flexDirection","avatar","margin","backgroundColor","palette","secondary","main","form","submit","validate","values","errors","firstName","password","lastName","email","test","repeatPassword","length","useStyles","Alert","props","elevation","variant","renderField","input","label","meta","asyncValidating","invalid","touched","error","custom","TextField","InputProps","endAdornment","InputAdornment","Tooltip","style","fontSize","color","CircularProgress","id","name","fullWidth","placeholder","required","SignUp","showSuccessMessage","useSelector","state","classes","handleSubmit","submitting","useTheme","matches","useMediaQuery","breakpoints","up","Container","component","maxWidth","CssBaseline","className","Avatar","Typography","onSubmit","noValidate","Grid","container","item","xs","sm","Field","type","autoComplete","severity","Button","disabled","justify","Link","href","reduxForm","onSubmitSuccess","result","dispatch","reset","onSubmitFail","asyncValidate","Promise","resolve","then","includes","asyncBlurFields","connect","a","async","console","log","JSON","stringify","Copyright","align","Date","getFullYear","App","height","path","Register","showResults","Box","mt","Boolean","window","location","hostname","match","successReducer","action","reducers","combineReducers","reducer","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7ea29c62.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginRight: drawerWidth,\n  },\n  title: {\n    flexGrow: 1,\n    marginLeft: drawerWidth,\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-start',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginRight: drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginRight: 0,\n  },\n}));\n\nexport default function NavigationBar() {\n\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n      >\n        <Toolbar>\n          <Typography variant=\"h6\" noWrap className={classes.title}>\n            Persistent drawer\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <main\n      >\n        <div className={classes.drawerHeader} />\n      </main>\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={true}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <List>\n          {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\n            <ListItem button key={text}>\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n        <Divider />\n        <List>\n          {['All mail', 'Trash', 'Spam'].map((text, index) => (\n            <ListItem button key={text}>\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n      </Drawer>\n    </div >\n  );\n}\n","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function SignIn() {\n  const classes = useStyles();\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form className={classes.form} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign In\n          </Button>\n          <Grid container>\n            <Grid item xs>\n              <Link href=\"#\" variant=\"body2\">\n                Forgot password?\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link href=\"#\" variant=\"body2\">\n                {\"Don't have an account? Sign Up\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n    </Container>\n  );\n}","const validate = values => {\n  const errors = {}\n  if (!values.firstName) {\n    errors.firstName = 'Required'\n  }\n  if (!values.password) {\n    errors.password = 'Required'\n  }\n  if (!values.lastName) {\n    errors.lastName = 'Required'\n  }\n  if (!values.email) {\n    errors.email = 'Required'\n  }\n  if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email) && values.email) {\n    errors.email = 'Invalid email address'\n  }\n  if (!values.repeatPassword) {\n    errors.repeatPassword = 'Required'\n  }\n  if (values.password != values.repeatPassword) {\n    errors.repeatPassword = 'Passwords must match'\n  }\n  if (values.password)\n    if (values.password.length < '6') {\n      errors.password = 'Password must be longer than 6 symbols'\n    }\n  return errors\n}\n\nexport default validate","import React from \"react\";\nimport Container from '@material-ui/core/Container';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { CssBaseline, Avatar, TextField, Typography, Button, Grid, Link, Tooltip } from '@material-ui/core';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport { Field, reduxForm } from 'redux-form'\nimport validate from \"./FormValidation/validate\"\nimport asyncValidate from \"./FormValidation/asyncValidate\"\nimport WarningSharpIcon from '@material-ui/icons/WarningSharp';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { useTheme } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useSelector, connect } from 'react-redux';\nimport { setSuccessMessage, removeSuccessMessage } from '../actions';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport DoneIcon from '@material-ui/icons/Done';\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst renderField = ({ input, label, meta: { asyncValidating, invalid, touched, error }, ...custom }) => (\n\n  < div >\n    <div>\n      <TextField\n        InputProps={\n          !asyncValidating && touched && invalid && error ?\n            {\n              endAdornment: (\n                <InputAdornment>\n                  <Tooltip title={<span style={{ fontSize: \"15px\" }}>{touched && error}</span>} style={{ width: '120px', fontSize: \"50px\", backgroundColor: \"blue\" }}>\n                    <WarningSharpIcon style={{ color: \"red\" }} />\n                  </Tooltip>\n                </InputAdornment>\n              )\n            }\n            : asyncValidating ? {\n              endAdornment: (\n                <CircularProgress color=\"secondary\" />\n              )\n            } : !asyncValidating && !error && touched ?\n                {\n                  endAdornment: (\n                    <DoneIcon style={{ color: \"green\" }} />\n                  )\n                } : {}\n        }\n\n        id={input.name}\n        style={{ margin: \"10px 0px\" }}\n        variant=\"outlined\"\n        fullWidth\n        label={label}\n        placeholder={label}\n        error={error && touched && invalid}\n        required\n        {...input}\n        {...custom}\n      />\n    </div>\n  </div >\n)\n\nconst clearFields = (result, dispatch, props) => {\n  props.reset('asyncValidation');\n  props.dispatch(setSuccessMessage());\n}\n\nconst removeSuccess = (dispatch, result, ...props) => {\n  props[1].dispatch(removeSuccessMessage());\n}\n\n\nlet SignUp = (props) => {\n  const showSuccessMessage = useSelector(state => state.showSuccessMessage);\n  const classes = useStyles();\n  const { handleSubmit, submitting } = props\n  const theme = useTheme();\n  const matches = useMediaQuery(theme.breakpoints.up('sm'));\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        <form className={classes.form} onSubmit={handleSubmit} noValidate>\n          <Grid container spacing={matches ? 2 : 0}>\n            <Grid item xs={12} sm={6}>\n              <Field name=\"firstName\" type=\"text\" component={renderField} label=\"First Name\" autoComplete=\"fname\" />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <Field name=\"lastName\" type=\"text\" component={renderField} label=\"Last Name\" />\n            </Grid>\n          </Grid>\n          <Grid item xs={12}>\n            <Field name=\"email\" type=\"email\" component={renderField} label=\"Email \" />\n            <Field name=\"password\" type=\"password\" component={renderField} label=\"Password\" />\n            <Field name=\"repeatPassword\" type=\"password\" component={renderField} label=\"Repeat Password\" />\n            {showSuccessMessage ?\n              <Alert severity=\"success\">\n                Success\n              </Alert>\n              : ''}\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n              disabled={submitting}\n            >\n              Sign Up\n          </Button>\n          </Grid>\n          <Grid justify=\"flex-end\" container>\n            <Grid item>\n              <Link href=\"#\" variant=\"body2\">\n                Already have an account? Sign in\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n    </Container >\n  )\n}\n\nSignUp = reduxForm({\n  form: 'asyncValidation', // a unique identifier for this form\n  onSubmitSuccess: clearFields,\n  onSubmitFail: removeSuccess,\n  validate,\n  asyncValidate,\n  asyncBlurFields: ['email']\n})(SignUp)\n\nSignUp = connect(state => ({\n  showSuccessMessage: state.showSuccessMessage\n}))(SignUp)\n\nexport default SignUp","export const setSuccessMessage = () => {\n  return {\n    type: 'Success'\n  }\n}\n\nexport const removeSuccessMessage = () => {\n  return {\n    type: 'Error'\n  }\n}","export default (values) => {\n  return new Promise(function (resolve) {\n    resolve()\n  })\n    .then(() => {\n      if (['a@a.com', 'paul', 'george', 'ringo'].includes(values.email)) {\n        throw { email: 'This email already registered' }\n      }\n    })\n}\n","export default (async function showResults(values) {\n  console.log(`You submitted:\\n\\n${JSON.stringify(values, null, 2)}`);\n});\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      {'My awesome website '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n","import React from 'react';\nimport NavigationBar from './Components/NavigationBar';\nimport Login from './Components/Login';\nimport Register from './Components/Register';\nimport showResults from './Components/FormValidation/showResults';\nimport Box from '@material-ui/core/Box';\nimport {\n  BrowserRouter,\n  Switch,\n  Route\n} from 'react-router-dom';\nimport Copyright from './Components/Copyright';\n\nfunction App() {\n  return (\n    <div className=\"App\" style={{ height: \"100vh\" }}>\n      {/* <NavigationBar /> */}\n      <BrowserRouter>\n        <Switch>\n          <Route path=\"/\"><div style={{\n            display: 'flex', alignItems: 'center',\n            justifyContent: 'space-around', flexDirection: 'column', height: '80vh'\n          }}><Register onSubmit={showResults} /></div></Route>\n        </Switch>\n      </BrowserRouter>\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </div >\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const successReducer = (state = false, action) => {\n  switch (action.type) {\n    case \"Success\":\n      return state = true;\n    case \"Error\":\n      return state = false;\n    default:\n      return state\n  }\n}\n\nexport default successReducer;","import { combineReducers } from 'redux';\nimport showSuccessMessage from \"./showSuccessMessage\"\nimport { reducer } from 'redux-form';\n\nconst reducers = combineReducers({\n  form: reducer,\n  showSuccessMessage\n});\n\nexport default reducers;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from \"react-redux\";\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux';\nimport reducers from \"./reducers\";\n\nconst store = createStore(reducers, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}